package com.wepay.nginx;

import static org.junit.Assert.*;

import org.junit.Test;

import com.wepay.nginx.Constants;

public class TestHttp {
	@Test
	public void testDumps() {
		String filename = Constants.TEST_RESOURCE_PATH + "/http.yml";
		String expected = "---Z0----\nhttp {\n    include                   /etc/nginx/conf.d/*;\n    ---A----\n    server {\n        ---B----\n        location /home/dist {\n            open_file_cache_errors    on;\n        }\n        ---B----\n        location /home/dist/latest {\n            open_file_cache_errors    off;\n        }\n        open_file_cache_errors    skjdhjkfh;\n        server_name               Roopa;\n        ---C----\n        server_name_in_redirect   off;\n        ---C----\n    }\n    ---A----\n    ---Z1----\n    server {\n        ---B----\n        location /home/dist {\n            open_file_cache_errors    on;\n        }\n        ---B----\n        location /home/dist/latest {\n            include                   /etc/nginx/conf.d/*;\n            open_file_cache_errors    off;\n        }\n        server_name               server1;\n    }\n    ---Z1----\n    ---Z2----\n    server {\n        location /home/dist {\n            include                   /hom/nginx/conf.d/*;\n            include                   /etc/nginc/conf.d/*;\n            open_file_cache_errors    on;\n        }\n        location /home/dist/latest {\n            open_file_cache_errors    off;\n        }\n        server_name               server2;\n    }\n    ---Z2----\n}\n---Z0 ----\n";
		try {
			String res = NginxFormatter.format(filename, "http");
		  assertEquals(res, expected);
		} catch (Throwable e) {
			e.printStackTrace();
			fail();
		}
	}

	@Test
	public void testVhostDumps() {
		String filename = Constants.TEST_RESOURCE_PATH + "/http_vhost.yml";
		String expected = "http {\n    geo $internal_address {\n        default                   0;\n        {% for ip in nat_external_ip %}\n        {{ ip }} 1;\n        {% endfor %}\n    }\n    server {\n        listen                    80;\n        location / {\n            rewrite                   ^(.*) https://{{ domain['host'] }}$1 permanent;\n        }\n        server_name               {{ domain['host'] }} {{ domain['alternate_hosts'] | default([]) | join(' ') }};\n    }\n    server {\n        {% if domain['alternate_hosts'] is defined %}\n        if ($host = '{{ domain['alternate_hosts'] | join (' ') }}') {\n            rewrite                   ^(.+)$ https://{{ domain['host'] }}$1;\n        }\n        {% endif %}\n        #Whitelist HTTP methods\n        if ($request_method !~ ^(GET|HEAD|POST)$) {\n            return                    405;\n        }\n        access_log                {{ access_log_absolute_path }} main;\n        error_log                 {{ error_log_absolute_path }} info;\n        {% if hsts %}\n        add_header                Strict-Transport-Security \"max-age={{ hsts }}; preload\";\n        {% endif %}\n        client_body_buffer_size   {{ client_body_buffer_size_and_unit }};\n        client_max_body_size      {{ client_max_body_size_and_unit }};\n        error_page                500 502 503 504 403 /error.html;\n        {% if domain['type'] == 'main' %}\n        index                     {{ root_index }};\n        {% endif %}\n        keepalive_requests        {{ keepalive_requests_integer }};\n        keepalive_timeout         {{ keepalive_timeout_seconds }};\n        listen                    443 ssl;\n        location / {\n            deny                      all;\n        }\n        location /{{ fb_token_provider_location }}/ {\n            if (!-e $request_filename) {\n                rewrite                   ^/{{ fb_token_provider_location }}/(.+)$ /index.php?kohana_uri={{ fb_token_provider_location }}/$1 last;\n            }\n        }\n        location ~* \\.php$ {\n            include                   /etc/nginx/fastcgi_params;\n            fastcgi_param             HTTPS on;\n            fastcgi_param             SERVER_ADDR 127.0.0.1;\n            fastcgi_param             SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param             HTTP_PROXY \"\";\n            fastcgi_pass              {{ fastcgi_pass }};\n            {% if is_rate_limited|default(False) %}\n            limit_req                 zone=one burst={{ limit_burst }};\n            {% endif %}\n        }\n        location ~ /\\.svn {\n            deny                      all;\n        }\n        #Support CORS so font embedding works in modern browsers\n        location ~* \\.(eot|ttf|woff)$ {\n            add_header                Access-Control-Allow-Origin *;\n        }\n        location / {\n            if ($request_uri ~* ^/internal) {\n                set                       $internal_request I;\n            }\n            if ($internal_address = 0) {\n                set                       $internal_request \"${internal_request}E\";\n            }\n            if ($internal_request = IE) {\n                return                    405;\n            }\n            #Facebook token provider is always blocked on default https port\n            {% if environment_name_short != \"tst\" %}\n            if ($request_uri ~* ^/{{ fb_token_provider_location }}) {\n                return                    404;\n            }\n            {% endif %}\n            #Set cache headers for straight files\n            if (-f $request_filename) {\n                break;\n            }\n            #Block static resources we never use\n            if ($request_filename ~* \\.(gif|ico|feed)$) {\n                return                    404;\n            }\n            #FIXME the url beatification logic should not be tied to kohana!\n            if (!-e $request_filename) {\n                rewrite                   ^/(.+)$ /{{ root_index }}?kohana_uri=$1 last;\n            }\n            #Rate limiting\n            {% if is_rate_limited|default(False) and not rpc_server|default(False) and not maas_server|default(False) %}\n            limit_req                 zone=one burst={{ limit_burst }};\n            {% endif %}\n        }\n        #buildinfo endpoint, based on buildinfo.json file\n        location /buildinfo {\n            alias                     {{ root }};\n            index                     {{ buildinfo_index }};\n        }\n        #POS portal callback, served by Possum service\n        location /portal/ {\n            proxy_pass                http://$target_host$request_uri;\n            set                       $target_host \"{{ possum_host }}\";\n        }\n        location = /error.html {\n            root                      /var/www/nginx-error;\n        }\n        location = /error-logo.html {\n            root                      /var/www/nginx-error;\n        }\n        #FIXME this shouldn't really go here (fake an ssl cert in hb script?)\n        location = /{{ healthcheck_index }} {\n            include                   /etc/nginx/fastcgi_params;\n            access_log                /var/log/nginx/hb_access.log;\n            error_log                 /var/log/nginx/hb_error.log;\n            fastcgi_param             HTTPS on;\n            fastcgi_param             SERVER_ADDR 127.0.0.1;\n            fastcgi_param             SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param             HTTP_PROXY \"\";\n            fastcgi_pass              {{ fastcgi_pass }};\n        }\n        location = /nginx_status {\n            access_log                false;\n            allow                     {{nginx_status_access_ip}};\n            deny                      all;\n            stub_status               true;\n        }\n        #Pass PHP requests to FPM\n        location ~* \\.php$ {\n            include                   /etc/nginx/fastcgi_params;\n            fastcgi_param             HTTPS on;\n            fastcgi_param             SERVER_ADDR 127.0.0.1;\n            fastcgi_param             SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param             HTTP_PROXY \"\";\n            fastcgi_pass              {{ fastcgi_pass }};\n            {% if is_rate_limited|default(False) and not rpc_server|default(False) and not maas_server|default(False) %}\n            limit_req                 zone=one burst={{ limit_burst }};\n            {% endif %}\n        }\n        #deny access to {{ domain['name'] }}'s monitoring endpoints\n        {% if domain['type'] == 'proxy' %}\n        location ~ /(buildinfo|healthcheck|ping) {\n            deny                      all;\n        }\n        {% endif %}\n        {% if domain['type'] == 'proxy' %}\n        location / {\n            {% if domain['set_whitelist_ips'] is defined %} {% for ip in domain['set_whitelist_ips'] %}\n            allow                     {{ ip }};\n            {% endfor %}{% endif %}\n            {% if domain['set_whitelist_ips'] is defined %} \n            deny                      all;\n            {% endif %}\n            proxy_pass                {{ domain['proxy_dst'] }};\n            {% if domain['set_host_header'] is defined and domain['set_host_header'] == true %}\n            proxy_set_header          Host $http_host;\n            {% endif %}\n            {% if domain['type'] == 'blackhole' %}\n            return                    403;\n            {% endif %}\n        }\n        {% endif %}\n        resolver                  8.8.8.8 8.8.4.4 valid={{ ocsp_resolver_valid_time_and_unit }};\n        resolver_timeout          {{ ocsp_resolver_timeout_and_unit }};\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/$  https://{{ marketing_domain }}/  permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/$  https://{{ marketing_domain }}/  permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/welcome/?$ https://{{ marketing_domain }}/ permanent;;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/about/?$ https://{{ marketing_domain }}/about-wepaypermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/about/team/?$https://{{ marketing_domain }}/about-wepaypermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/team/?$https://{{ marketing_domain }}/people permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/careers/?$ https://{{ marketing_domain }}/careerspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/customers/?$ https://{{ marketing_domain }}/customerspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/gallery/?$ https://{{ marketing_domain }}/customerspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/pricing/?$ https://{{ marketing_domain }}/pricingpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/fees/?$https://{{ marketing_domain }}/pricingpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/payments-in-business/?$https://{{ marketing_domain }}/payments-for-platforms permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/how-we-can-help/?$ https://{{ marketing_domain }}/payments-for-platforms permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/get-started/?$ https://{{ marketing_domain }}/getting-startedpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/wepay-connect/?$ https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/wepay-clear/?$ https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/platforms/?$ https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/features/?$https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/security/?$https://{{ marketing_domain }}/security permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/privacy-policy/us/?$ https://{{ marketing_domain }}/privacy-policy-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/privacy-policy/ca/?$ https://{{ marketing_domain }}/privacy-policy-capermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/privacy-policy/?$https://{{ marketing_domain }}/privacy-policy-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/terms-of-service/us/?$ https://{{ marketing_domain }}/terms-of-service-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/terms-of-service/ca/?$ https://{{ marketing_domain }}/terms-of-service-capermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/terms-of-service/?$https://{{ marketing_domain }}/terms-of-service-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/press/?$ https://{{ marketing_domain }}/news-and-eventspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/vc/?$https://visit.wepay.com/vc.html permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/harry/?$ https://visit.wepay.com/harry.htmlpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/saastr/?$https://visit.wepay.com/cheatsheet_revenue_pymts.html permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' %}\n        root                      {{ root }};\n        {% endif %}\n        server_name               {{ domain['host'] }} {{ domain['alternate_hosts'] | default([]) | join(' ') }};\n        #SSL Configuration\n        ssl                       true;\n        ssl_certificate           {{ ssl_cert_directory }}/{{ domain['ssl'] }}.crt;\n        ssl_certificate_key       {{ ssl_cert_directory }}/{{ domain['ssl'] }}.key;\n        ssl_ciphers               {{ ssl_ciphers_list }};\n        ssl_client_certificate    {{ ssl_cert_directory }}/fb_ca.pem;\n        ssl_crl                   {{ ssl_cert_directory }}/fb_crl.pem;\n        ssl_dhparam               {{ ssl_cert_directory }}/dhparams.pem;\n        ssl_prefer_server_ciphers {{ ssl_prefer_server_ciphers_switch }};\n        ssl_protocols             {{ ssl_protocols_list }};\n        ssl_session_cache         {{ ssl_session_cache_info }};\n        ssl_session_timeout       {{ ssl_session_timeout_and_unit }};\n        ssl_stapling              true;\n        ssl_stapling_verify       true;\n        ssl_verify_client         true;\n    }\n}\n";
		try {
			String res = NginxFormatter.format(filename, "http");
			assertEquals(res, expected);
		} catch (Throwable e) {
			e.printStackTrace();
			fail();
		}
	}
	
	@Test
	public void testbasicHttpDumps() {
		String filename = Constants.TEST_RESOURCE_PATH + "/http_basic.yml";
		String expected = "http {\n    geo $internal_address {\n        default                   0;\n        {% for ip in nat_external_ip %}\n        {{ ip }} 1;\n        {% endfor %}\n    }\n    server {\n        listen                    80;\n        location / {\n            rewrite                   ^(.*) https://{{ domain['host'] }}$1 permanent;\n        }\n        server_name               {{ domain['host'] }} {{ domain['alternate_hosts'] | default([]) | join(' ') }};\n    }\n    server {\n        {% if domain['alternate_hosts'] is defined %}\n        if ($host = '{{ domain['alternate_hosts'] | join (' ') }}') {\n            rewrite                   ^(.+)$ https://{{ domain['host'] }}$1;\n        }\n        {% endif %}\n        #Whitelist HTTP methods\n        if ($request_method !~ ^(GET|HEAD|POST)$) {\n            return                    405;\n        }\n        access_log                {{ access_log_absolute_path }} main;\n        error_log                 {{ error_log_absolute_path }} info;\n        {% if hsts %}\n        add_header                Strict-Transport-Security \"max-age={{ hsts }}; preload\";\n        {% endif %}\n        client_body_buffer_size   {{ client_body_buffer_size_and_unit }};\n        client_max_body_size      {{ client_max_body_size_and_unit }};\n        error_page                500 502 503 504 403 /error.html;\n        {% if domain['type'] == 'main' %}\n        index                     {{ root_index }};\n        {% endif %}\n        keepalive_requests        {{ keepalive_requests_integer }};\n        keepalive_timeout         {{ keepalive_timeout_seconds }};\n        listen                    443 ssl;\n        location / {\n            deny                      all;\n        }\n        location /{{ fb_token_provider_location }}/ {\n            if (!-e $request_filename) {\n                rewrite                   ^/{{ fb_token_provider_location }}/(.+)$ /index.php?kohana_uri={{ fb_token_provider_location }}/$1 last;\n            }\n        }\n        location ~* \\.php$ {\n            include                   /etc/nginx/fastcgi_params;\n            fastcgi_param             HTTPS on;\n            fastcgi_param             SERVER_ADDR 127.0.0.1;\n            fastcgi_param             SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param             HTTP_PROXY \"\";\n            fastcgi_pass              {{ fastcgi_pass }};\n            {% if is_rate_limited|default(False) %}\n            limit_req                 zone=one burst={{ limit_burst }};\n            {% endif %}\n        }\n        location ~ /\\.svn {\n            deny                      all;\n        }\n        #Support CORS so font embedding works in modern browsers\n        location ~* \\.(eot|ttf|woff)$ {\n            add_header                Access-Control-Allow-Origin *;\n        }\n        location / {\n            if ($request_uri ~* ^/internal) {\n                set                       $internal_request I;\n            }\n            if ($internal_address = 0) {\n                set                       $internal_request \"${internal_request}E\";\n            }\n            if ($internal_request = IE) {\n                return                    405;\n            }\n            #Facebook token provider is always blocked on default https port\n            {% if environment_name_short != \"tst\" %}\n            if ($request_uri ~* ^/{{ fb_token_provider_location }}) {\n                return                    404;\n            }\n            {% endif %}\n            #Set cache headers for straight files\n            if (-f $request_filename) {\n                break;\n            }\n            #Block static resources we never use\n            if ($request_filename ~* \\.(gif|ico|feed)$) {\n                return                    404;\n            }\n            #FIXME the url beatification logic should not be tied to kohana!\n            if (!-e $request_filename) {\n                rewrite                   ^/(.+)$ /{{ root_index }}?kohana_uri=$1 last;\n            }\n            #Rate limiting\n            {% if is_rate_limited|default(False) and not rpc_server|default(False) and not maas_server|default(False) %}\n            limit_req                 zone=one burst={{ limit_burst }};\n            {% endif %}\n        }\n        #buildinfo endpoint, based on buildinfo.json file\n        location /buildinfo {\n            alias                     {{ root }};\n            index                     {{ buildinfo_index }};\n        }\n        #POS portal callback, served by Possum service\n        location /portal/ {\n            proxy_pass                http://$target_host$request_uri;\n            set                       $target_host \"{{ possum_host }}\";\n        }\n        location = /error.html {\n            root                      /var/www/nginx-error;\n        }\n        location = /error-logo.html {\n            root                      /var/www/nginx-error;\n        }\n        #FIXME this shouldn't really go here (fake an ssl cert in hb script?)\n        location = /{{ healthcheck_index }} {\n            include                   /etc/nginx/fastcgi_params;\n            access_log                /var/log/nginx/hb_access.log;\n            error_log                 /var/log/nginx/hb_error.log;\n            fastcgi_param             HTTPS on;\n            fastcgi_param             SERVER_ADDR 127.0.0.1;\n            fastcgi_param             SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param             HTTP_PROXY \"\";\n            fastcgi_pass              {{ fastcgi_pass }};\n        }\n        location = /nginx_status {\n            access_log                false;\n            allow                     {{nginx_status_access_ip}};\n            deny                      all;\n            stub_status               true;\n        }\n        #Pass PHP requests to FPM\n        location ~* \\.php$ {\n            include                   /etc/nginx/fastcgi_params;\n            fastcgi_param             HTTPS on;\n            fastcgi_param             SERVER_ADDR 127.0.0.1;\n            fastcgi_param             SCRIPT_FILENAME $realpath_root$fastcgi_script_name;\n            fastcgi_param             HTTP_PROXY \"\";\n            fastcgi_pass              {{ fastcgi_pass }};\n            {% if is_rate_limited|default(False) and not rpc_server|default(False) and not maas_server|default(False) %}\n            limit_req                 zone=one burst={{ limit_burst }};\n            {% endif %}\n        }\n        #deny access to {{ domain['name'] }}'s monitoring endpoints\n        {% if domain['type'] == 'proxy' %}\n        location ~ /(buildinfo|healthcheck|ping) {\n            deny                      all;\n        }\n        {% endif %}\n        {% if domain['type'] == 'proxy' %}\n        location / {\n            {% if domain['set_whitelist_ips'] is defined %} {% for ip in domain['set_whitelist_ips'] %}\n            allow                     {{ ip }};\n            {% endfor %}{% endif %}\n            {% if domain['set_whitelist_ips'] is defined %} \n            deny                      all;\n            {% endif %}\n            proxy_pass                {{ domain['proxy_dst'] }};\n            {% if domain['set_host_header'] is defined and domain['set_host_header'] == true %}\n            proxy_set_header          Host $http_host;\n            {% endif %}\n            {% if domain['type'] == 'blackhole' %}\n            return                    403;\n            {% endif %}\n        }\n        {% endif %}\n        resolver                  8.8.8.8 8.8.4.4 valid={{ ocsp_resolver_valid_time_and_unit }};\n        resolver_timeout          {{ ocsp_resolver_timeout_and_unit }};\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/$  https://{{ marketing_domain }}/  permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/$  https://{{ marketing_domain }}/  permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/welcome/?$ https://{{ marketing_domain }}/ permanent;;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/about/?$ https://{{ marketing_domain }}/about-wepaypermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/about/team/?$https://{{ marketing_domain }}/about-wepaypermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/team/?$https://{{ marketing_domain }}/people permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/careers/?$ https://{{ marketing_domain }}/careerspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/customers/?$ https://{{ marketing_domain }}/customerspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/gallery/?$ https://{{ marketing_domain }}/customerspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/pricing/?$ https://{{ marketing_domain }}/pricingpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/fees/?$https://{{ marketing_domain }}/pricingpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/payments-in-business/?$https://{{ marketing_domain }}/payments-for-platforms permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/how-we-can-help/?$ https://{{ marketing_domain }}/payments-for-platforms permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/get-started/?$ https://{{ marketing_domain }}/getting-startedpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/wepay-connect/?$ https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/wepay-clear/?$ https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/platforms/?$ https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/features/?$https://{{ marketing_domain }}/solutionspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/security/?$https://{{ marketing_domain }}/security permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/privacy-policy/us/?$ https://{{ marketing_domain }}/privacy-policy-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/privacy-policy/ca/?$ https://{{ marketing_domain }}/privacy-policy-capermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/privacy-policy/?$https://{{ marketing_domain }}/privacy-policy-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/terms-of-service/us/?$ https://{{ marketing_domain }}/terms-of-service-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/terms-of-service/ca/?$ https://{{ marketing_domain }}/terms-of-service-capermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/legal/terms-of-service/?$https://{{ marketing_domain }}/terms-of-service-uspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/press/?$ https://{{ marketing_domain }}/news-and-eventspermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/vc/?$https://visit.wepay.com/vc.html permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/harry/?$ https://visit.wepay.com/harry.htmlpermanent;\n        {% endif %}\n        {% if domain['type'] == 'main' and if enable_marketing_redirects and enable_marketing_redirects_by_role|default(False) %}\n        rewrite                   ^/saastr/?$https://visit.wepay.com/cheatsheet_revenue_pymts.html permanent;\n        {% endif %}\n        {% if domain['type'] == 'main' %}\n        root                      {{ root }};\n        {% endif %}\n        server_name               {{ domain['host'] }} {{ domain['alternate_hosts'] | default([]) | join(' ') }};\n        #SSL Configuration\n        ssl                       true;\n        ssl_certificate           {{ ssl_cert_directory }}/{{ domain['ssl'] }}.crt;\n        ssl_certificate_key       {{ ssl_cert_directory }}/{{ domain['ssl'] }}.key;\n        ssl_ciphers               {{ ssl_ciphers_list }};\n        ssl_client_certificate    {{ ssl_cert_directory }}/fb_ca.pem;\n        ssl_crl                   {{ ssl_cert_directory }}/fb_crl.pem;\n        ssl_dhparam               {{ ssl_cert_directory }}/dhparams.pem;\n        ssl_prefer_server_ciphers {{ ssl_prefer_server_ciphers_switch }};\n        ssl_protocols             {{ ssl_protocols_list }};\n        ssl_session_cache         {{ ssl_session_cache_info }};\n        ssl_session_timeout       {{ ssl_session_timeout_and_unit }};\n        ssl_stapling              true;\n        ssl_stapling_verify       true;\n        ssl_verify_client         true;\n    }\n}\n";
		try {
			String res = NginxFormatter.format(filename, "http");
			System.out.println(res);
			assertEquals(res, expected);
		} catch (Throwable e) {
			e.printStackTrace();
			fail();
		}
	}
}
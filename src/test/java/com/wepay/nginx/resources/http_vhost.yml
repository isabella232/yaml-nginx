geo:
  address: "$internal_address"
  default: "0"
  ip: 
    value: "{{ ip }} 1"

servers:
  - name: server1
    listen: 80
    server_name: "{{ domain['host'] }} {{ domain['alternate_hosts'] | default([]) | join(' ') }}"
    # Redirect all HTTP to HTTPS
    location:
      url: "/"
      rewrite: "^(.*) https://{{ domain['host'] }}$1 permanent"
  - name: server2
    listen: "443 ssl"
    server_name: "{{ domain['host'] }} {{ domain['alternate_hosts'] | default([]) | join(' ') }}"
    
    access_log: "{{ access_log_absolute_path }} main"
    error_log: "{{ error_log_absolute_path }} info"
    ssl:
      value: on
      comment: "SSL Configuration"
    ssl_certificate: "{{ ssl_cert_directory }}/{{ domain['ssl'] }}.crt"
    ssl_certificate_key: "{{ ssl_cert_directory }}/{{ domain['ssl'] }}.key"
    ssl_protocols: "{{ ssl_protocols_list }}"
    ssl_session_timeout: "{{ ssl_session_timeout_and_unit }}"
    ssl_session_cache: "{{ ssl_session_cache_info }}"

    # https://weakdh.org/sysadmin.html
    ssl_ciphers: "{{ ssl_ciphers_list }}"
    ssl_prefer_server_ciphers: "{{ ssl_prefer_server_ciphers_switch }}"
    ssl_dhparam: "{{ ssl_cert_directory }}/dhparams.pem"
    # OCSP Stapling
    ssl_stapling: on
    ssl_stapling_verify: on
    resolver: "8.8.8.8 8.8.4.4 valid={{ ocsp_resolver_valid_time_and_unit }}"
    resolver_timeout: "{{ ocsp_resolver_timeout_and_unit }}"
    add_header:
      value: "Strict-Transport-Security max-age={{ hsts }}; preload" 
    keepalive_timeout: "{{ keepalive_timeout_seconds }}"
    keepalive_requests: "{{ keepalive_requests_integer }}"
    client_max_body_size: "{{ client_max_body_size_and_unit }}"
    client_body_buffer_size: "{{ client_body_buffer_size_and_unit }}"
    ssl_client_certificate: "{{ ssl_cert_directory }}/fb_ca.pem"
    ssl_crl: "{{ ssl_cert_directory }}/fb_crl.pem"
    ssl_verify_client: on
    root:  "{{ root }}"
    index: "{{ root_index }}"
    locations:
      - name: "location1"
        url: "/"
        deny: all
      - name: location2
        url: "/{{ fb_token_provider_location }}/"
        if:
          condition: "!-e $request_filename"
          rewrite: "^/{{ fb_token_provider_location }}/(.+)$ /index.php?kohana_uri={{ fb_token_provider_location }}/$1 last"
      - name: location3
        url: "~*  php$"
        limit_req:
          value: "zone=one burst={{ limit_burst }}"
        fastcgi_pass:  "{{ fastcgi_pass }}"
        fastcgi_params: 
          - fastcgi_param: "HTTPS on"
          - fastcgi_param: "SERVER_ADDR 127.0.0.1"
          - fastcgi_param: "SCRIPT_FILENAME $realpath_root$fastcgi_script_name"
          - fastcgi_param: "HTTP_PROXY ''"
        include: "/etc/nginx/fastcgi_params"
      - name: location7
        url: "~ /.svn"
        deny: all
      - name: location8
        url: "~* .(eot|ttf|woff)$"
        add_header: "Access-Control-Allow-Origin *"
        comment: "Support CORS so font embedding works in modern browsers"
      - name: location8
        url: "/"
        limit_req:
          value: "zone=one burst={{ limit_burst }}"
          comment: "Rate limiting"
        ifs:
          - name: if1
            condition: "$request_uri ~* ^/internal"
            set: $internal_request I
          - name: if2
            condition: "$internal_address = 0"
            set: "$internal_request  ${internal_request}E"
          - name: if3
            condition: "$internal_request = IE"
            return: 405
          - name: "if4"
            condition: "$internal_request = AE"
            return: 404
            comment: "Facebook token provider is always blocked on default https port"
          - name: if6
            condition: "-f $request_filename"
            #expires: 6h
            #add_header: "Cache-Control public"
            break: ""
            comment: "Set cache headers for straight files"
          - name: if7
            condition: "$request_filename ~* .(gif|ico|feed)$"
            return: 404
            comment: "Block static resources we never use"
          - name: if8
            condition: "!-e $request_filename"
            rewrite: ^/(.+)$ /{{ root_index }}?kohana_uri=$1 last
            comment: "FIXME the url beatification logic should not be tied to kohana!"
      - name: location9
        url: "/buildinfo"
        comment: "buildinfo endpoint, based on buildinfo.json file"
        index: "{{ buildinfo_index }}"
        alias: "{{ root }}"
      - name: location10
        url: "/portal/"
        comment: "POS portal callback, served by Possum service"
        set: "$target_host '{{ possum_host }}'"
        proxy_pass: "http://$target_host$request_uri"
      - name: location11
        url: "= /error.html"
        root: "/var/www/nginx-error"
      - name: location12
        url: "= /error-logo.html"
        root: /var/www/nginx-error
      - name: location13
        url: "= /{{ healthcheck_index }}"
        access_log: /var/log/nginx/hb_access.log
        error_log:  /var/log/nginx/hb_error.log
        fastcgi_pass:  "{{ fastcgi_pass }}"
        fastcgi_params:
          - fastcgi_param: "HTTPS on"
          - fastcgi_param: "SERVER_ADDR 127.0.0.1"
          - fastcgi_param: "SCRIPT_FILENAME $realpath_root$fastcgi_script_name"
          - fastcgi_param: "HTTP_PROXY ''"
        include: /etc/nginx/fastcgi_params
        comment: "FIXME this shouldn't really go here (fake an ssl cert in hb script?)"
      - name: location14
        url: "= /nginx_status"
        stub_status: on
        access_log: off
        allow: "{{nginx_status_access_ip}}"
        deny: all
      - name: location15
        url: "~* .php$"
        comment: "Pass PHP requests to FPM"
        limit_req:
          value: "zone=one burst={{ limit_burst }}"
        fastcgi_pass: "{{ fastcgi_pass }}"
        fastcgi_params:
          - fastcgi_param: "HTTPS on"
          - fastcgi_param: "SERVER_ADDR 127.0.0.1"
          - fastcgi_param: "SCRIPT_FILENAME $realpath_root$fastcgi_script_name"
          - fastcgi_param: "HTTP_PROXY ''"
        include: "/etc/nginx/fastcgi_params"
      - name: location16
        url: "~ /(buildinfo|healthcheck|ping)"
        deny: all 
        comment: "deny access to {{ domain['name'] }}'s monitoring endpoints"
      - name: location17
        url: "/" 
        proxy_set_header:
          value: "X-Forwarded-For $remote_addr"
        proxy_pass: "{{ domain['proxy_dst'] }}"
        proxy_set_header:
          value: "Host $http_host" 
        deny:
          value: all 
        allow:
          value: "{{ ip }}" 
        return:
          value: "403" 
    root:
      value: "{{ root }}" 
    index:
      value: "{{ root_index }}" 
    rewrites:
      - value: "^/$  https://{{ marketing_domain }}/  permanent"
        name: "name1"
      - name: rewrite1
        value: "^/$  https://{{ marketing_domain }}/  permanent"
      - name: rewrite2
        value: "^/welcome/?$ https://{{ marketing_domain }}/ permanent;"
      - name: rewrite2
        value: "^/about/?$ https://{{ marketing_domain }}/about-wepaypermanent"
      - name: rewrite3
        value: "^/about/team/?$https://{{ marketing_domain }}/about-wepaypermanent"
    ifs:
      - condition: "$host = '{{ domain['alternate_hosts'] | join (' ') }}'"
        rewrite: "^(.+)$ https://{{ domain['host'] }}$1"
      - condition: "$request_method !~ ^(GET|HEAD|POST)$"
        return: 405
        comment: "Whitelist HTTP methods"

    error_page: "500 502 503 504 403 /error.html"